#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main(void) {
	int pid;
	int k;
	int status;
	
	/* Création des processus fils */
	for(k = 0; k < 7; k++) {
		pid = fork();
		/* Si je suis un processus fils je sors de la boucle pour ne pas moi même créer de fils */
		if(pid == 0) {
			break;
		}
	}
	/* Les 7 processus fils du processus principal ont été créés */
	
	/* Si je suis un processus fils j'affiche mon identité, je m'endors un instant, puis je retourne mon numéro (k) comme status */
	if(pid == 0) {
		printf("Je suis %d (k=%d) de père %d\n", getpid(), k, getppid());
		sleep(1*k);
		exit(k);
	}
	/* Si je suis le processus père j'attend chacune des terminaisons de mes fils et j'affiche leurs id et status */
	else {
		/* Tant qu'il y a des fils non terminés */
		while(k > 0) {
			pid = wait(&status);
			printf("Fils %d terminé avec status %d\n", pid, WEXITSTATUS(status));
			k--;
		}
	}
	return 0;
}

Je suis 26127 (k=0) de père 26126
Je suis 26128 (k=1) de père 26126
Je suis 26129 (k=2) de père 26126
Je suis 26130 (k=3) de père 26126
Je suis 26131 (k=4) de père 26126
Je suis 26132 (k=5) de père 26126
Je suis 26133 (k=6) de père 26126
Fils 26127 terminé avec status 0
Fils 26128 terminé avec status 1
Fils 26129 terminé avec status 2
Fils 26130 terminé avec status 3
Fils 26131 terminé avec status 4
Fils 26132 terminé avec status 5
Fils 26133 terminé avec status 6
