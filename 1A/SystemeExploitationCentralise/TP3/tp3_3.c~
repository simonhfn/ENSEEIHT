#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sys/types.h>
#include <sys/wait.h>

int main(int argc, char *argv[]) {
	int pid;
	int status;
	int wpid;
	
	/* S'arreter si un seul paramètre est fourni */
	if(argc == 1) {
		exit(1);
	}
	
	/* Création du processus fils pour l'execution du programme en paramètres */
	pid = fork();
	
	/* Traitement du processus fils */
	if(pid == 0) {
		execvp(argv[1], &argv[1]);
	}
	/* Traitement du processus père */
	else {
		do {
			wpid = waitpid(pid, &status, WUNTRACED | WCONTINUED);
			if(wpid == -1) {
				/* RIEN */
			}
			else if(WIFEXITED(status)) {
				printf("Le processus fils s'est terminé correctement avec le status %d.\n", WEXITSTATUS(status));
				wpid = -1;
			}
			else if(WIFSIGNALED(status)) {
				printf("Le processus fils s'est terminé à cause d'un signal de numéro %d.\n", WTERMSIG(status));
				wpid = -1;
			}
			else if(WIFSTOPPED(status)) {
				printf("Le processus fils a été stoppé avec le signal de numéro %d.\n", WSTOPSIG(status));
			}
			else if(WIFCONTINUED(status)) {
				printf("Le processus fils a repris.\n");
			}
		} while(wpid != -1);
	}
	
	return 0;
}

