===== LISTE.C =====

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include "liste.h"

struct fiche_proc {
	int pid;
	Etat etat;
	Liste_proc suivant;
};

int appartient(int pid, Liste_proc l_proc) {
	if(l_proc == NULL) {
		return 0;
	}
	else if(l_proc->pid == pid) {
		return 1;
	}
	else {
		return appartient(pid, l_proc->suivant);
	}
}

void inserer(int pid, Etat etat, Liste_proc* pl_proc) {
	
	Liste_proc elt;
	Liste_proc l_proc;
	
	// Si la liste n'existe pas terminer
	if(pl_proc == NULL) {
		exit(1);
	}
	
	// Création du processus à insérer
	elt = (Liste_proc)malloc(sizeof(struct fiche_proc));
	elt->pid = pid;
	elt->etat = etat;
	
	// Si la liste est vide
	if(*pl_proc == NULL) {
		*pl_proc = elt;
	}
	else {
		l_proc = *pl_proc;
		
		// Tant qu'on n'est pas arrivé à la queue
		while(l_proc->suivant != NULL) {
			l_proc = l_proc->suivant;
		}
		// *l_proc n'a pas de suivant
		
		l_proc->suivant = elt;
	}
}

void modifierEtat(int pid, Etat etat, Liste_proc l_proc) {
	
	// Si la liste n'est pas vide
	if(l_proc != NULL) {
		
		if(l_proc->pid == pid) {
			l_proc->etat = etat;
		}
		else {
			modifierEtat(pid, etat, l_proc->suivant);
		}
	}
}

void afficher(Liste_proc l_proc) {
	
	Liste_proc elt = l_proc;
	
	printf("Processus :\n");
	printf("-----------\n");
	
	// Tant qu'il y a des processuss à lister
	while(elt != NULL) {
		// Afficher les données du processus
		if(elt->etat == PRET) {
			printf("Processus - %d - PRET\n", elt->pid);
		}
		else if(elt->etat == SUSPENDU) {
			printf("Processus - %d - SUSPENDU\n", elt->pid);
		}
		// Passer au suivant
		elt = elt->suivant;
	}
	printf("\n");
}

int lireNumTete(Liste_proc l_proc) {
	if(l_proc == NULL) {
		exit(1);
	}
	else {
		return l_proc->pid;
	}
}

void supprimer(int pid, Liste_proc* pl_proc) {
	
	Liste_proc l_proc;
	
	// Si la liste n'existe pas terminer
	if(pl_proc == NULL) {
		exit(1);
	}
	// Si la liste n'est pas vide
	if(*pl_proc != NULL) {
		l_proc = *pl_proc;
		
		// Si la tête de liste est le processus à retirer
		if(l_proc->pid == pid) {
			*pl_proc = l_proc->suivant;
		}
		else {
			supprimer(pid, &(l_proc->suivant));
		}
	}
}





===== LISTE.H =====

#ifndef _LISTE
#define _LISTE

typedef struct fiche_proc *Liste_proc;
typedef enum {PRET, SUSPENDU} Etat;

#endif

int appartient(int pid, Liste_proc l_proc);
void inserer(int pid, Etat etat, Liste_proc* pl_proc);
void modifierEtat(int pid, Etat etat, Liste_proc l_proc);
void afficher(Liste_proc l_proc);
int lireNumTete(Liste_proc l_proc);





===== APP_LISTE.C =====

#include <stdio.h>
#include <stdlib.h>
#include "liste.h"

int main() {
	int k;
	Liste_proc processus = NULL;
	
	// Créer un premier processus
	inserer(99, PRET, &processus);
	
	// Créer 10 processus dans la liste
	for(k = 0; k < 10; k++){
		inserer(k, PRET, &processus);
	}
	
	// Afficher la liste de processus
	afficher(processus);
	
	// Modifier l'état des processus 1, 4, 7
	modifierEtat(1, SUSPENDU, processus);
	modifierEtat(4, SUSPENDU, processus);
	modifierEtat(7, SUSPENDU, processus);
	
	// Afficher à nouveau la liste de processus
	afficher(processus);
	
	// Afficher le pid du premier processus
	printf("Le processus en tête a pour pid %d\n\n", lireNumTete(processus));
	
	// Supprimer le processus 5
	supprimer(5, &processus);
	
	// Dire si les processus 99, 5, 7, 13 appartiennent aux processus listés
	printf("%d : 99 est dans la liste des processus (1=true, 0=false)\n\n", appartient(99, processus));
	printf("%d : 5 est dans la liste des processus (1=true, 0=false)\n\n", appartient(5, processus));
	printf("%d : 7 est dans la liste des processus (1=true, 0=false)\n\n", appartient(7, processus));
	printf("%d : 13 est dans la liste des processus (1=true, 0=false)\n\n", appartient(13, processus));
	
	return 0;
}





===== RESULTAT =====

Processus :
-----------
Processus - 99 - PRET
Processus - 0 - PRET
Processus - 1 - PRET
Processus - 2 - PRET
Processus - 3 - PRET
Processus - 4 - PRET
Processus - 5 - PRET
Processus - 6 - PRET
Processus - 7 - PRET
Processus - 8 - PRET
Processus - 9 - PRET

Processus :
-----------
Processus - 99 - PRET
Processus - 0 - PRET
Processus - 1 - SUSPENDU
Processus - 2 - PRET
Processus - 3 - PRET
Processus - 4 - SUSPENDU
Processus - 5 - PRET
Processus - 6 - PRET
Processus - 7 - SUSPENDU
Processus - 8 - PRET
Processus - 9 - PRET

Le processus en tête a pour pid 99

1 : 99 est dans la liste des processus (1=true, 0=false)

0 : 5 est dans la liste des processus (1=true, 0=false)

1 : 7 est dans la liste des processus (1=true, 0=false)

0 : 13 est dans la liste des processus (1=true, 0=false)

