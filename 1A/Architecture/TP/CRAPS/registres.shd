module registres(rst, clk, areg[4..0], breg[4..0], dreg[4..0], dbus[31..0] : abus[31..0], bbus[31..0], ir[31..0], break)
	decoder5to32(dreg[4..0] : id[31..0]);
	decoder5to32(areg[4..0] : ia[31..0]);
	decoder5to32(breg[4..0] : ib[31..0]);
	
	// Modifier 3 choses par ajout de registre : reg32, abus[31..0], bbus[31..0]
	
	// REG32
	r0[31..0] = 0;
	reg32(rst, clk, id[1], dbus[31..0] : r1[31..0]);
	reg32(rst, clk, id[2], dbus[31..0] : r2[31..0]);
	reg32(rst, clk, id[3], dbus[31..0] : r3[31..0]);
	reg32(rst, clk, id[4], dbus[31..0] : r4[31..0]);
	reg32(rst, clk, id[5], dbus[31..0] : r5[31..0]);
	reg32(rst, clk, id[6], dbus[31..0] : r6[31..0]);
	reg32(rst, clk, id[7], dbus[31..0] : r7[31..0]);
	reg32(rst, clk, id[8], dbus[31..0] : r8[31..0]);
	reg32(rst, clk, id[9], dbus[31..0] : r9[31..0]);
	// ...
	r20[31..0] = 1;
	reg32(rst, clk, id[21], dbus[31..0] : r21[31..0]);
	reg32(rst, clk, id[22], dbus[31..0] : r22[31..0]);
	// ...
	reg32(rst, clk, id[26], dbus[31..0] : r26[31..0]);
	reg32(rst, clk, id[27], dbus[31..0] : r27[31..0]);
	reg32(rst, clk, id[28], dbus[31..0] : r28[31..0]);
	reg32(rst, clk, id[29], dbus[31..0] : r29[31..0]);
	reg32(rst, clk, id[30], dbus[31..0] : r30[31..0]);
	reg32(rst, clk, id[31], dbus[31..0] : ir[31..0]);

	// ABUS
	abus[31..0] = r0[31..0]:ia[0];
	abus[31..0] = r1[31..0]:ia[1];
	abus[31..0] = r2[31..0]:ia[2];
	abus[31..0] = r3[31..0]:ia[3];
	abus[31..0] = r4[31..0]:ia[4];
	abus[31..0] = r5[31..0]:ia[5];
	abus[31..0] = r6[31..0]:ia[6];
	abus[31..0] = r7[31..0]:ia[7];
	abus[31..0] = r8[31..0]:ia[8];
	abus[31..0] = r9[31..0]:ia[9];
	// ...
	abus[31..0] = r20[31..0]:ia[20];
	abus[31..0] = r21[31..0]:ia[21];
	abus[31..0] = r22[31..0]:ia[22];
	// ...
	abus[31..0] = r26[31..0]:ia[26];
	abus[31..0] = r27[31..0]:ia[27];
	abus[31..0] = r28[31..0]:ia[28];
	abus[31..0] = r29[31..0]:ia[29];
	abus[31..0] = r30[31..0]:ia[30];
	abus[31..0] = ir[31..0]:ia[31];
	
	// BBUS
	bbus[31..0] = r0[31..0]:ib[0];
	bbus[31..0] = r1[31..0]:ib[1];
	bbus[31..0] = r2[31..0]:ib[2];
	bbus[31..0] = r3[31..0]:ib[3];
	bbus[31..0] = r4[31..0]:ib[4];
	bbus[31..0] = r5[31..0]:ib[5];
	bbus[31..0] = r6[31..0]:ib[6];
	bbus[31..0] = r7[31..0]:ib[7];
	bbus[31..0] = r8[31..0]:ib[8];
	bbus[31..0] = r9[31..0]:ib[9];
	// ...
	bbus[31..0] = r20[31..0]:ib[20];
	bbus[31..0] = r21[31..0]:ib[21];
	bbus[31..0] = r22[31..0]:ib[22];
	// ...
	bbus[31..0] = r26[31..0]:ib[26];
	bbus[31..0] = r27[31..0]:ib[27];
	bbus[31..0] = r28[31..0]:ib[28];
	bbus[31..0] = r29[31..0]:ib[29];
	bbus[31..0] = r30[31..0]:ib[30];
	bbus[31..0] = ir[31..0]:ib[31];
	
	// BREAK
	eq32(r26[31..0], r30[31..0] : break);
end module