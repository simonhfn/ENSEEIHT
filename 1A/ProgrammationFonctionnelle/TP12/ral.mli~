(* le type abstrait *)
type 'a ral;;

(* la structure vide *)
val vide : 'a ral;;

(* ajout d'un élément en tête *)
val cons : 'a -> 'a ral -> 'a ral;;

(* head ral: renvoie le premier élément de ral *)
(* précondition : ral non vide *)
(* résultat : l'élément d'indice 0 de ral *)
(* erreur : ral vide *)
val head : 'a ral -> 'a;;

(* tail ral: renvoie la "queue" (au sens liste) de ral *)
(* précondition : ral non vide *)
(* résultat : la sous-structure de ral *)
(* composée des éléments d'indices [1, taille ral[ *)
(* erreur : ral vide *)
val tail : 'a ral -> 'a ral;;

(* get i ral: renvoie le ième élément de ral *)
(* précondition : i dans l'intervalle [0, taille ral[ *)
(* résultat : le ième élément *)
(* erreur : indice i incorrect *)
val get : int -> 'a ral -> 'a;;

(* set i v ral: remplace le ième élément de ral par v *)
(* précondition : i dans l'intervalle [0, taille ral[ *)
(* résultat : ral "modifié" *)
(* erreur : indice i incorrect *)
val set : int -> 'a -> 'a ral -> 'a ral;
