oc5:
module: robot_victor

signals: 13
   0: input:capteur_1 - single:1 bool:0
   1: input:capteur_2 - single:2 bool:0
   2: input:capteur_3 - single:3 bool:0
   3: input:capteur_4 - single:4 bool:0
   4: output:Avant_A - single:9
   5: output:Arriere_A - single:10
   6: output:Vitesse_A - single:11
   7: output:Avant_B - single:12
   8: output:Arriere_B - single:13
   9: output:Vitesse_B - single:14
   10: output:Avant_C - single:15
   11: output:Arriere_C - single:16
   12: output:Vitesse_C - single:17
end: 

variables: 18
   0: $0
   1: $0
   2: $0
   3: $0
   4: $0
   5: $0
   6: $1
   7: $0
   8: $0
   9: $0
   10: $0
   11: $1
   12: $0
   13: $0
   14: $1
   15: $0
   16: $0
   17: $1
end: 

actions: 34
   0: present: 0
   1: present: 1
   2: present: 2
   3: present: 3
   4: output: 4
   5: output: 5
   6: output: 6
   7: output: 7
   8: output: 8
   9: output: 9
   10: output: 10
   11: output: 11
   12: output: 12
   13: call:$0 (7) ($9(6,#80))
   14: call:$1 (11) (#100)
   15: call:$0 (12) (@$0)
   16: call:$0 (13) (12)
   17: call:$1 (14) (#0)
   18: call:$1 (6) (14)
   19: call:$0 (5) ($9(6,#80))
   20: call:$0 (8) ($9(6,#50))
   21: call:$0 (10) (12)
   22: call:$0 (9) ($5(10))
   23: call:$0 (16) (12)
   24: call:$0 (15) ($5(16))
   25: call:$1 (17) (11)
   26: if: 7
   27: call:$1 (6) ($13(6,#1))
   28: if: 5
   29: if: 1
   30: call:$0 (10) (@$1)
   31: if: 8
   32: call:$0 (16) (@$1)
   33: if: 4
end:

states: 5
startpoint: 0
calls: 356
0:  13 14 6 15 7 16 8 17 9 18 19 20 21 5 22 4 23 11 24 10 25 12 <1> 

1:  13 14 6 15 7 16 8 17 9 26 ( 27)( 18) 19 20 28 ( 29 ( 30 5 22 4 31 ( 32 11)(
 33 ( 32 11)( 23 11)))( 31 ( 33 ( 30 5)( 21 5))( 21 5) 22 4 33 ( 32 11)( 23 11)
))( 29 ( 31 ( 30 5 22 4 32 11)( 21 5 22 4 23 11))( 31 ( 33 ( 30 5 22 4 32 11)( 
21 5 22 4 23 11))( 21 5 22 4 23 11))) 24 10 25 12 29 ( 33 ( <2> )( <3> ))( 33 (
 <4> )( <1> ))

2:  13 14 6 15 7 16 8 17 9 26 ( 27)( 18) 19 20 28 ( 30 5 22 4 32 11 24 10 25 12
 <2> )( 29 ( 31 ( 30 5 22 4 32 11)( 21 5 22 4 23 11) 24 10 25 12 33 ( <2> )(
 <3> ))( 31 ( 33 ( 30 5 22 4 32 11)( 21 5 22 4 23 11))( 21 5 22 4 23 11) 24 10 
25 12 33 ( <4> )( <1> )))

3:  13 14 6 15 7 16 8 17 9 26 ( 27)( 18) 19 20 28 ( 30 5 22 4 31 ( 32 11)( 33 (
 32 11)( 23 11)) 24 10 25 12 33 ( <2> )( <3> ))( 29 ( 31 ( 30 5 22 4 32 11)( 21
 5 22 4 23 11) 24 10 25 12 33 ( <2> )( <3> ))( 31 ( 33 ( 30 5 22 4 32 11)( 21 5
 22 4 23 11))( 21 5 22 4 23 11) 24 10 25 12 33 ( <4> )( <1> )))

4:  13 14 6 15 7 16 8 17 9 26 ( 27)( 18) 19 20 28 ( 29 ( 30 5 22 4 32 11 24 10 
25 12 <2> )( 31 ( 30 5)( 21 5) 22 4 32 11 24 10 25 12 <4> ))( 29 ( 31 ( 30 5 22
 4 32 11)( 21 5 22 4 23 11) 24 10 25 12 33 ( <2> )( <3> ))( 31 ( 33 ( 30 5 22 4
 32 11)( 21 5 22 4 23 11))( 21 5 22 4 23 11) 24 10 25 12 33 ( <4> )( <1> )))

end:

endmodule: