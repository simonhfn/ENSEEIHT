[comment encoding = UTF-8 /]
[module toTinaDotNet('http://petrinet/1.0')]

[comment Generation de la syntaxe .net à partir d'un modèle de réseau de pétri /]

[template public toTinaDotNet(petriNet : PetriNet)]
[comment @main/]
[file (petriNet.name.concat('.net'), false, 'UTF-8')]
# $ nd ./[petriNet.name/].net # visualisation graphique
# Edit -> Draw - Neato
# Tools -> check net
# Tools -> stepper simulator
net [petriNet.name/]
[for (pl : Place | petriNet.petriNetElements->getPlaces())]
pl [pl.name/] ([pl.marking/])
[/for]
[for (tr : Transition | petriNet.petriNetElements->getTransitions())]
tr [tr.name/][tr.getTransitionsPredecessors()/] ->[tr.getTransitionsSuccessors()/]
[/for]
[/file]
[/template]

[query public getTransitions(elements : OrderedSet(PetriNetElement)) : OrderedSet(Transition) = 
    elements->select( e | e.oclIsTypeOf(Transition) )
        ->collect( e | e.oclAsType(Transition) )
        ->asOrderedSet()
/]

[query public getPlaces(elements : OrderedSet(PetriNetElement)) : OrderedSet(Place) = 
    elements->select( e | e.oclIsTypeOf(Place) )
        ->collect( e | e.oclAsType(Place) )
        ->asOrderedSet()
/]

[template public getTransitionsPredecessors(tr : Transition)]
[for (arc : Arc | tr.linksToPredecessor)] [arc.getPredecessorPlace()/][/for]
[/template]

[template public getTransitionsSuccessors(tr : Transition)]
[for (arc : Arc | tr.linksToSuccessor)] [arc.getSuccessorPlace()/][/for]
[/template]

[template public getPredecessorPlace(arc : Arc)]
[arc.predecessor.name/][if (arc.readOnly)]?[arc.multiplicity/][elseif (arc.multiplicity > 1)]*[arc.multiplicity/][/if]
[/template]

[template public getSuccessorPlace(arc : Arc)]
[arc.successor.name/][if (arc.multiplicity > 1)]*[arc.multiplicity/][/if]
[/template]


